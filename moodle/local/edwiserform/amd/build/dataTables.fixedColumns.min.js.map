{"version":3,"sources":["dataTables.fixedColumns.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","factory","define","amd","$","window","document","exports","module","root","fn","dataTable","require","jQuery","undefined","_firefoxScroll","DataTable","FixedColumns","dt","init","that","this","camelToHungarian","defaults","dtSettings","Api","settings","s","iTableColumns","aoColumns","length","aiOuterWidths","aiInnerWidths","rtl","nTable","css","dom","scroller","header","body","footer","grid","wrapper","left","head","foot","right","clone","_oFixedColumns","_bInitComplete","_fnConstruct","oApi","_fnCallbackReg","alert","extend","fnUpdate","_fnDraw","fnRedrawLayout","_fnColCalc","_fnGridLayout","fnRecalculateHeight","nTr","_DTTC_iHeight","style","height","fnSetRowHeight","nTarget","iHeight","fnGetPosition","node","idx","inst","oInstance","parents","nodeName","toLowerCase","index","nTBody","colIdx","parentNode","_fnVisibleToColumnIndex","fnToFixedNode","rowIdx","found","iLeftColumns","find","iRightColumns","cell","oInit","fnVersionCheck","oScroll","sX","mouseController","classes","oClasses","sScrollWrapper","sScrollBody","_fnGridSetup","mouseDown","nTableWrapper","on","e","button","one","originalEvent","liner","scrollTop","wheelType","createElement","xDelta","type","deltaX","wheelDeltaX","scrollLeft","call","bFirstDraw","jqTable","column","vis","recalc","indexes","namespace","off","remove","fnDraw","_fnLog","VERSION","iLeftWidth","iRightWidth","each","i","col","border","th","nTh","filter","iWidth","outerWidth","indexOf","parseInt","push","width","block","oOverflow","_fnDTOverflow","nTHead","position","nSWrapper","nLeft","childNodes","nRight","insertBefore","appendChild","bar","headBlock","footBlock","nTFoot","oGrid","iBodyHeight","offsetHeight","iFullHeight","scrollbarAdjust","_firefoxScrollError","paddingRight","boxSizing","x","top","maxHeight","y","display","nTableScrollBody","out","iBarWidth","offsetWidth","clientWidth","clientHeight","bAll","_fnCloneLeft","_fnCloneRight","fnDrawCallback","trigger","leftClone","rightClone","aiColumns","bVisible","_fnClone","_fnCopyLayout","aoOriginal","events","aReturn","aClones","aCloned","iLen","aRow","j","jLen","inArray","iCloned","nClone","unique","oClone","iColumn","iIndex","aoCloneLayout","jqCloneThead","aoFixedHeader","className","aoHeader","empty","_fnDrawHead","_fnDetectHeader","_fnEqualiseHeights","sHeightMatch","paddingBottom","marginBottom","getAttribute","removeAttribute","nBody","aiDisplay","nInnerThead","innerHTML","oStyle","paddingTop","borderTopWidth","borderBottomWidth","z","oFeatures","bServerSide","_iDisplayStart","aTds","aoData","anCells","children","n","cloneNode","setAttribute","html","margin","padding","oScroller","scrollerForcer","force","forcer","removeChild","aoFooter","jqCloneTfoot","aoCurrFooter","anUnique","_fnGetUniqueThs","_fnGetTrNodes","nIn","aOut","toUpperCase","original","iHeightOriginal","iHeightClone","rootOriginal","getElementsByTagName","rootClone","jqBoxHack","anOriginal","outerHeight","anClone","heights","test","overflow","appendTo","version","register","ctx","row","rows","page","columnIdx","rowClonedIdx","parent","columns","flatten","context","columnVisible","registerPlural","fixedColumns","opts"],"mappings":"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","sourcesContent":["/*! FixedColumns 3.8.0\n * ©2010-2018 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     FixedColumns\n * @description Freeze columns in place on a scrolling DataTable\n * @version     3.8.0\n * @file        dataTables.fixedColumns.js\n * @author      SpryMedia Ltd (www.sprymedia.co.uk)\n * @contact     www.sprymedia.co.uk/contact\n * @copyright   Copyright 2010-2018 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license/mit\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'local_edwiserform/jquery.dataTables'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ || ! $.fn.dataTable ) {\n\t\t\t\t$ = require('local_edwiserform/jquery.dataTables')(root, $).$;\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document, undefined ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\nvar _firefoxScroll;\n\n/**\n * When making use of DataTables' x-axis scrolling feature, you may wish to\n * fix the left most column in place. This plug-in for DataTables provides\n * exactly this option (note for non-scrolling tables, please use the\n * FixedHeader plug-in, which can fix headers and footers). Key\n * features include:\n *\n * * Freezes the left or right most columns to the side of the table\n * * Option to freeze two or more columns\n * * Full integration with DataTables' scrolling options\n * * Speed - FixedColumns is fast in its operation\n *\n *  @class\n *  @constructor\n *  @global\n *  @param {object} dt DataTables instance. With DataTables 1.10 this can also\n *    be a jQuery collection, a jQuery selector, DataTables API instance or\n *    settings object.\n *  @param {object} [init={}] Configuration object for FixedColumns. Options are\n *    defined by {@link FixedColumns.defaults}\n *\n *  @requires jQuery 1.7+\n *  @requires DataTables 1.8.0+\n *\n *  @example\n *      var table = $('#example').dataTable( {\n *        \"scrollX\": \"100%\"\n *      } );\n *      new $.fn.dataTable.fixedColumns( table );\n */\nvar FixedColumns = function ( dt, init ) {\n\tvar that = this;\n\n\t/* Sanity check - you just know it will happen */\n\tif ( ! ( this instanceof FixedColumns ) ) {\n\t\talert( \"FixedColumns warning: FixedColumns must be initialised with the 'new' keyword.\" );\n\t\treturn;\n\t}\n\n\tif ( init === undefined || init === true ) {\n\t\tinit = {};\n\t}\n\n\t// Use the DataTables Hungarian notation mapping method, if it exists to\n\t// provide forwards compatibility for camel case variables\n\tvar camelToHungarian = $.fn.dataTable.camelToHungarian;\n\tif ( camelToHungarian ) {\n\t\tcamelToHungarian( FixedColumns.defaults, FixedColumns.defaults, true );\n\t\tcamelToHungarian( FixedColumns.defaults, init );\n\t}\n\n\t// v1.10 allows the settings object to be got form a number of sources\n\tvar dtSettings = new $.fn.dataTable.Api( dt ).settings()[0];\n\n\t/**\n\t * Settings object which contains customisable information for FixedColumns instance\n\t * @namespace\n\t * @extends FixedColumns.defaults\n\t * @private\n\t */\n\tthis.s = {\n\t\t/**\n\t\t * DataTables settings objects\n\t\t *  @type     object\n\t\t *  @default  Obtained from DataTables instance\n\t\t */\n\t\t\"dt\": dtSettings,\n\n\t\t/**\n\t\t * Number of columns in the DataTable - stored for quick access\n\t\t *  @type     int\n\t\t *  @default  Obtained from DataTables instance\n\t\t */\n\t\t\"iTableColumns\": dtSettings.aoColumns.length,\n\n\t\t/**\n\t\t * Original outer widths of the columns as rendered by DataTables - used to calculate\n\t\t * the FixedColumns grid bounding box\n\t\t *  @type     array.<int>\n\t\t *  @default  []\n\t\t */\n\t\t\"aiOuterWidths\": [],\n\n\t\t/**\n\t\t * Original inner widths of the columns as rendered by DataTables - used to apply widths\n\t\t * to the columns\n\t\t *  @type     array.<int>\n\t\t *  @default  []\n\t\t */\n\t\t\"aiInnerWidths\": [],\n\n\n\t\t/**\n\t\t * Is the document layout right-to-left\n\t\t * @type boolean\n\t\t */\n\t\trtl: $(dtSettings.nTable).css('direction') === 'rtl'\n\t};\n\n\n\t/**\n\t * DOM elements used by the class instance\n\t * @namespace\n\t * @private\n\t *\n\t */\n\tthis.dom = {\n\t\t/**\n\t\t * DataTables scrolling element\n\t\t *  @type     node\n\t\t *  @default  null\n\t\t */\n\t\t\"scroller\": null,\n\n\t\t/**\n\t\t * DataTables header table\n\t\t *  @type     node\n\t\t *  @default  null\n\t\t */\n\t\t\"header\": null,\n\n\t\t/**\n\t\t * DataTables body table\n\t\t *  @type     node\n\t\t *  @default  null\n\t\t */\n\t\t\"body\": null,\n\n\t\t/**\n\t\t * DataTables footer table\n\t\t *  @type     node\n\t\t *  @default  null\n\t\t */\n\t\t\"footer\": null,\n\n\t\t/**\n\t\t * Display grid elements\n\t\t * @namespace\n\t\t */\n\t\t\"grid\": {\n\t\t\t/**\n\t\t\t * Grid wrapper. This is the container element for the 3x3 grid\n\t\t\t *  @type     node\n\t\t\t *  @default  null\n\t\t\t */\n\t\t\t\"wrapper\": null,\n\n\t\t\t/**\n\t\t\t * DataTables scrolling element. This element is the DataTables\n\t\t\t * component in the display grid (making up the main table - i.e.\n\t\t\t * not the fixed columns).\n\t\t\t *  @type     node\n\t\t\t *  @default  null\n\t\t\t */\n\t\t\t\"dt\": null,\n\n\t\t\t/**\n\t\t\t * Left fixed column grid components\n\t\t\t * @namespace\n\t\t\t */\n\t\t\t\"left\": {\n\t\t\t\t\"wrapper\": null,\n\t\t\t\t\"head\": null,\n\t\t\t\t\"body\": null,\n\t\t\t\t\"foot\": null\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Right fixed column grid components\n\t\t\t * @namespace\n\t\t\t */\n\t\t\t\"right\": {\n\t\t\t\t\"wrapper\": null,\n\t\t\t\t\"head\": null,\n\t\t\t\t\"body\": null,\n\t\t\t\t\"foot\": null\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Cloned table nodes\n\t\t * @namespace\n\t\t */\n\t\t\"clone\": {\n\t\t\t/**\n\t\t\t * Left column cloned table nodes\n\t\t\t * @namespace\n\t\t\t */\n\t\t\t\"left\": {\n\t\t\t\t/**\n\t\t\t\t * Cloned header table\n\t\t\t\t *  @type     node\n\t\t\t\t *  @default  null\n\t\t\t\t */\n\t\t\t\t\"header\": null,\n\n\t\t\t\t/**\n\t\t\t\t * Cloned body table\n\t\t\t\t *  @type     node\n\t\t\t\t *  @default  null\n\t\t\t\t */\n\t\t\t\t\"body\": null,\n\n\t\t\t\t/**\n\t\t\t\t * Cloned footer table\n\t\t\t\t *  @type     node\n\t\t\t\t *  @default  null\n\t\t\t\t */\n\t\t\t\t\"footer\": null\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Right column cloned table nodes\n\t\t\t * @namespace\n\t\t\t */\n\t\t\t\"right\": {\n\t\t\t\t/**\n\t\t\t\t * Cloned header table\n\t\t\t\t *  @type     node\n\t\t\t\t *  @default  null\n\t\t\t\t */\n\t\t\t\t\"header\": null,\n\n\t\t\t\t/**\n\t\t\t\t * Cloned body table\n\t\t\t\t *  @type     node\n\t\t\t\t *  @default  null\n\t\t\t\t */\n\t\t\t\t\"body\": null,\n\n\t\t\t\t/**\n\t\t\t\t * Cloned footer table\n\t\t\t\t *  @type     node\n\t\t\t\t *  @default  null\n\t\t\t\t */\n\t\t\t\t\"footer\": null\n\t\t\t}\n\t\t}\n\t};\n\n\tif ( dtSettings._oFixedColumns ) {\n\t\tthrow 'FixedColumns already initialised on this table';\n\t}\n\n\t/* Attach the instance to the DataTables instance so it can be accessed easily */\n\tdtSettings._oFixedColumns = this;\n\n\t/* Let's do it */\n\tif ( ! dtSettings._bInitComplete )\n\t{\n\t\tdtSettings.oApi._fnCallbackReg( dtSettings, 'aoInitComplete', function () {\n\t\t\tthat._fnConstruct( init );\n\t\t}, 'FixedColumns' );\n\t}\n\telse\n\t{\n\t\tthis._fnConstruct( init );\n\t}\n};\n\n\n\n$.extend( FixedColumns.prototype , {\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Public methods\n\t * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n\t/**\n\t * Update the fixed columns - including headers and footers. Note that FixedColumns will\n\t * automatically update the display whenever the host DataTable redraws.\n\t *  @returns {void}\n\t *  @example\n\t *      var table = $('#example').dataTable( {\n\t *          \"scrollX\": \"100%\"\n\t *      } );\n\t *      var fc = new $.fn.dataTable.fixedColumns( table );\n\t *\n\t *      // at some later point when the table has been manipulated....\n\t *      fc.fnUpdate();\n\t */\n\t\"fnUpdate\": function ()\n\t{\n\t\tthis._fnDraw( true );\n\t},\n\n\n\t/**\n\t * Recalculate the resizes of the 3x3 grid that FixedColumns uses for display of the table.\n\t * This is useful if you update the width of the table container. Note that FixedColumns will\n\t * perform this function automatically when the window.resize event is fired.\n\t *  @returns {void}\n\t *  @example\n\t *      var table = $('#example').dataTable( {\n\t *          \"scrollX\": \"100%\"\n\t *      } );\n\t *      var fc = new $.fn.dataTable.fixedColumns( table );\n\t *\n\t *      // Resize the table container and then have FixedColumns adjust its layout....\n\t *      $('#content').width( 1200 );\n\t *      fc.fnRedrawLayout();\n\t */\n\t\"fnRedrawLayout\": function ()\n\t{\n\t\tthis._fnColCalc();\n\t\tthis._fnGridLayout();\n\t\tthis.fnUpdate();\n\t},\n\n\n\t/**\n\t * Mark a row such that it's height should be recalculated when using 'semiauto' row\n\t * height matching. This function will have no effect when 'none' or 'auto' row height\n\t * matching is used.\n\t *  @param   {Node} nTr TR element that should have it's height recalculated\n\t *  @returns {void}\n\t *  @example\n\t *      var table = $('#example').dataTable( {\n\t *          \"scrollX\": \"100%\"\n\t *      } );\n\t *      var fc = new $.fn.dataTable.fixedColumns( table );\n\t *\n\t *      // manipulate the table - mark the row as needing an update then update the table\n\t *      // this allows the redraw performed by DataTables fnUpdate to recalculate the row\n\t *      // height\n\t *      fc.fnRecalculateHeight();\n\t *      table.fnUpdate( $('#example tbody tr:eq(0)')[0], [\"insert date\", 1, 2, 3 ... ]);\n\t */\n\t\"fnRecalculateHeight\": function ( nTr )\n\t{\n\t\tdelete nTr._DTTC_iHeight;\n\t\tnTr.style.height = 'auto';\n\t},\n\n\n\t/**\n\t * Set the height of a given row - provides cross browser compatibility\n\t *  @param   {Node} nTarget TR element that should have it's height recalculated\n\t *  @param   {int} iHeight Height in pixels to set\n\t *  @returns {void}\n\t *  @example\n\t *      var table = $('#example').dataTable( {\n\t *          \"scrollX\": \"100%\"\n\t *      } );\n\t *      var fc = new $.fn.dataTable.fixedColumns( table );\n\t *\n\t *      // You may want to do this after manipulating a row in the fixed column\n\t *      fc.fnSetRowHeight( $('#example tbody tr:eq(0)')[0], 50 );\n\t */\n\t\"fnSetRowHeight\": function ( nTarget, iHeight )\n\t{\n\t\tnTarget.style.height = iHeight+\"px\";\n\t},\n\n\n\t/**\n\t * Get data index information about a row or cell in the table body.\n\t * This function is functionally identical to fnGetPosition in DataTables,\n\t * taking the same parameter (TH, TD or TR node) and returning exactly the\n\t * the same information (data index information). THe difference between\n\t * the two is that this method takes into account the fixed columns in the\n\t * table, so you can pass in nodes from the master table, or the cloned\n\t * tables and get the index position for the data in the main table.\n\t *  @param {node} node TR, TH or TD element to get the information about\n\t *  @returns {int} If nNode is given as a TR, then a single index is \n\t *    returned, or if given as a cell, an array of [row index, column index\n\t *    (visible), column index (all)] is given.\n\t */\n\t\"fnGetPosition\": function ( node )\n\t{\n\t\tvar idx;\n\t\tvar inst = this.s.dt.oInstance;\n\n\t\tif ( ! $(node).parents('.DTFC_Cloned').length )\n\t\t{\n\t\t\t// Not in a cloned table\n\t\t\treturn inst.fnGetPosition( node );\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Its in the cloned table, so need to look up position\n\t\t\tif ( node.nodeName.toLowerCase() === 'tr' ) {\n\t\t\t\tidx = $(node).index();\n\t\t\t\treturn inst.fnGetPosition( $('tr', this.s.dt.nTBody)[ idx ] );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar colIdx = $(node).index();\n\t\t\t\tidx = $(node.parentNode).index();\n\t\t\t\tvar row = inst.fnGetPosition( $('tr', this.s.dt.nTBody)[ idx ] );\n\n\t\t\t\treturn [\n\t\t\t\t\trow,\n\t\t\t\t\tcolIdx,\n\t\t\t\t\tinst.oApi._fnVisibleToColumnIndex( this.s.dt, colIdx )\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\t},\n\n\tfnToFixedNode: function ( rowIdx, colIdx )\n\t{\n\t\tvar found;\n\n\t\tif ( colIdx < this.s.iLeftColumns ) {\n\t\t\tfound = $(this.dom.clone.left.body).find('[data-dt-row='+rowIdx+'][data-dt-column='+colIdx+']');\n\t\t}\n\t\telse if ( colIdx >= this.s.iRightColumns ) {\n\t\t\tfound = $(this.dom.clone.right.body).find('[data-dt-row='+rowIdx+'][data-dt-column='+colIdx+']');\n\t\t}\n\n\t\tif ( found && found.length ) {\n\t\t\treturn found[0];\n\t\t}\n\n\t\t// Fallback - non-fixed node\n\t\tvar table = new $.fn.dataTable.Api(this.s.dt);\n\t\treturn table.cell(rowIdx, colIdx).node();\n\t},\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Private methods (they are of course public in JS, but recommended as private)\n\t * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n\t/**\n\t * Initialisation for FixedColumns\n\t *  @param   {Object} oInit User settings for initialisation\n\t *  @returns {void}\n\t *  @private\n\t */\n\t\"_fnConstruct\": function ( oInit )\n\t{\n\t\tvar i, iLen, iWidth,\n\t\t\tthat = this;\n\n\t\t/* Sanity checking */\n\t\tif ( typeof this.s.dt.oInstance.fnVersionCheck != 'function' ||\n\t\t     this.s.dt.oInstance.fnVersionCheck( '1.8.0' ) !== true )\n\t\t{\n\t\t\talert( \"FixedColumns \"+FixedColumns.VERSION+\" required DataTables 1.8.0 or later. \"+\n\t\t\t\t\"Please upgrade your DataTables installation\" );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.s.dt.oScroll.sX === \"\" )\n\t\t{\n\t\t\tthis.s.dt.oInstance.oApi._fnLog( this.s.dt, 1, \"FixedColumns is not needed (no \"+\n\t\t\t\t\"x-scrolling in DataTables enabled), so no action will be taken. Use 'FixedHeader' for \"+\n\t\t\t\t\"column fixing when scrolling is not enabled\" );\n\t\t\treturn;\n\t\t}\n\n\t\t/* Apply the settings from the user / defaults */\n\t\tthis.s = $.extend( true, this.s, FixedColumns.defaults, oInit );\n\n\t\t/* Set up the DOM as we need it and cache nodes */\n\t\tvar classes = this.s.dt.oClasses;\n\t\tthis.dom.grid.dt = $(this.s.dt.nTable).parents('div.'+classes.sScrollWrapper)[0];\n\t\tthis.dom.scroller = $('div.'+classes.sScrollBody, this.dom.grid.dt )[0];\n\n\t\t/* Set up the DOM that we want for the fixed column layout grid */\n\t\tthis._fnColCalc();\n\t\tthis._fnGridSetup();\n\n\t\t/* Event handlers */\n\t\tvar mouseController;\n\t\tvar mouseDown = false;\n\n\t\t// When the mouse is down (drag scroll) the mouse controller cannot\n\t\t// change, as the browser keeps the original element as the scrolling one\n\t\t$(this.s.dt.nTableWrapper).on( 'mousedown.DTFC', function (e) {\n\t\t\tif ( e.button === 0 ) {\n\t\t\t\tmouseDown = true;\n\n\t\t\t\t$(document).one( 'mouseup', function () {\n\t\t\t\t\tmouseDown = false;\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\t// When the body is scrolled - scroll the left and right columns\n\t\t$(this.dom.scroller)\n\t\t\t.on( 'mouseover.DTFC touchstart.DTFC', function () {\n\t\t\t\tif ( ! mouseDown ) {\n\t\t\t\t\tmouseController = 'main';\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.on( 'scroll.DTFC', function (e) {\n\t\t\t\tif ( ! mouseController && e.originalEvent ) {\n\t\t\t\t\tmouseController = 'main';\n\t\t\t\t}\n\n\t\t\t\tif ( mouseController === 'main' ) {\n\t\t\t\t\tif ( that.s.iLeftColumns > 0 ) {\n\t\t\t\t\t\tthat.dom.grid.left.liner.scrollTop = that.dom.scroller.scrollTop;\n\t\t\t\t\t}\n\t\t\t\t\tif ( that.s.iRightColumns > 0 ) {\n\t\t\t\t\t\tthat.dom.grid.right.liner.scrollTop = that.dom.scroller.scrollTop;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\tvar wheelType = 'onwheel' in document.createElement('div') ?\n\t\t\t'wheel.DTFC' :\n\t\t\t'mousewheel.DTFC';\n\n\t\tif ( that.s.iLeftColumns > 0 ) {\n\t\t\t// When scrolling the left column, scroll the body and right column\n\t\t\t$(that.dom.grid.left.liner)\n\t\t\t\t.on( 'mouseover.DTFC touchstart.DTFC', function () {\n\t\t\t\t\tif ( ! mouseDown ) {\n\t\t\t\t\t\tmouseController = 'left';\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t\t.on( 'scroll.DTFC', function ( e ) {\n\t\t\t\t\tif ( ! mouseController && e.originalEvent ) {\n\t\t\t\t\t\tmouseController = 'left';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( mouseController === 'left' ) {\n\t\t\t\t\t\tthat.dom.scroller.scrollTop = that.dom.grid.left.liner.scrollTop;\n\t\t\t\t\t\tif ( that.s.iRightColumns > 0 ) {\n\t\t\t\t\t\t\tthat.dom.grid.right.liner.scrollTop = that.dom.grid.left.liner.scrollTop;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t\t.on( wheelType, function(e) {\n\t\t\t\t\t// Pass horizontal scrolling through\n\t\t\t\t\tvar xDelta = e.type === 'wheel' ?\n\t\t\t\t\t\t-e.originalEvent.deltaX :\n\t\t\t\t\t\te.originalEvent.wheelDeltaX;\n\t\t\t\t\tthat.dom.scroller.scrollLeft -= xDelta;\n\t\t\t\t} );\n\t\t}\n\n\t\tif ( that.s.iRightColumns > 0 ) {\n\t\t\t// When scrolling the right column, scroll the body and the left column\n\t\t\t$(that.dom.grid.right.liner)\n\t\t\t\t.on( 'mouseover.DTFC touchstart.DTFC', function () {\n\t\t\t\t\tif ( ! mouseDown ) {\n\t\t\t\t\t\tmouseController = 'right';\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t\t.on( 'scroll.DTFC', function ( e ) {\n\t\t\t\t\tif ( ! mouseController && e.originalEvent ) {\n\t\t\t\t\t\tmouseController = 'right';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( mouseController === 'right' ) {\n\t\t\t\t\t\tthat.dom.scroller.scrollTop = that.dom.grid.right.liner.scrollTop;\n\t\t\t\t\t\tif ( that.s.iLeftColumns > 0 ) {\n\t\t\t\t\t\t\tthat.dom.grid.left.liner.scrollTop = that.dom.grid.right.liner.scrollTop;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t\t.on( wheelType, function(e) {\n\t\t\t\t\t// Pass horizontal scrolling through\n\t\t\t\t\tvar xDelta = e.type === 'wheel' ?\n\t\t\t\t\t\t-e.originalEvent.deltaX :\n\t\t\t\t\t\te.originalEvent.wheelDeltaX;\n\t\t\t\t\tthat.dom.scroller.scrollLeft -= xDelta;\n\t\t\t\t} );\n\t\t}\n\n\t\t$(window).on( 'resize.DTFC', function () {\n\t\t\tthat._fnGridLayout.call( that );\n\t\t} );\n\n\t\tvar bFirstDraw = true;\n\t\tvar jqTable = $(this.s.dt.nTable);\n\n\t\tjqTable\n\t\t\t.on( 'draw.dt.DTFC', function () {\n\t\t\t\tthat._fnColCalc();\n\t\t\t\tthat._fnDraw.call( that, bFirstDraw );\n\t\t\t\tbFirstDraw = false;\n\t\t\t} )\n\t\t\t.on( 'column-sizing.dt.DTFC', function () {\n\t\t\t\tthat._fnColCalc();\n\t\t\t\tthat._fnGridLayout( that );\n\t\t\t} )\n\t\t\t.on( 'column-visibility.dt.DTFC', function ( e, settings, column, vis, recalc ) {\n\t\t\t\tif ( recalc === undefined || recalc ) {\n\t\t\t\t\tthat._fnColCalc();\n\t\t\t\t\tthat._fnGridLayout( that );\n\t\t\t\t\tthat._fnDraw( true );\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.on( 'select.dt.DTFC deselect.dt.DTFC', function ( e, dt, type, indexes ) {\n\t\t\t\tif ( e.namespace === 'dt' ) {\n\t\t\t\t\tthat._fnDraw( false );\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.on( 'destroy.dt.DTFC', function () {\n\t\t\t\tjqTable.off( '.DTFC' );\n\n\t\t\t\t$(that.dom.scroller).off( '.DTFC' );\n\t\t\t\t$(window).off( '.DTFC' );\n\t\t\t\t$(that.s.dt.nTableWrapper).off( '.DTFC' );\n\n\t\t\t\t$(that.dom.grid.left.liner).off( '.DTFC '+wheelType );\n\t\t\t\t$(that.dom.grid.left.wrapper).remove();\n\n\t\t\t\t$(that.dom.grid.right.liner).off( '.DTFC '+wheelType );\n\t\t\t\t$(that.dom.grid.right.wrapper).remove();\n\t\t\t} );\n\n\t\t/* Get things right to start with - note that due to adjusting the columns, there must be\n\t\t * another redraw of the main table. It doesn't need to be a full redraw however.\n\t\t */\n\t\tthis._fnGridLayout();\n\t\tthis.s.dt.oInstance.fnDraw(false);\n\t},\n\n\n\t/**\n\t * Calculate the column widths for the grid layout\n\t *  @returns {void}\n\t *  @private\n\t */\n\t\"_fnColCalc\": function ()\n\t{\n\t\tvar that = this;\n\t\tvar iLeftWidth = 0;\n\t\tvar iRightWidth = 0;\n\n\t\tthis.s.aiInnerWidths = [];\n\t\tthis.s.aiOuterWidths = [];\n\n\t\t$.each( this.s.dt.aoColumns, function (i, col) {\n\t\t\tvar th = $(col.nTh);\n\t\t\tvar border;\n\n\t\t\tif ( ! th.filter(':visible').length ) {\n\t\t\t\tthat.s.aiInnerWidths.push( 0 );\n\t\t\t\tthat.s.aiOuterWidths.push( 0 );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Inner width is used to assign widths to cells\n\t\t\t\t// Outer width is used to calculate the container\n\t\t\t\tvar iWidth = th.outerWidth();\n\n\t\t\t\t// When working with the left most-cell, need to add on the\n\t\t\t\t// table's border to the outerWidth, since we need to take\n\t\t\t\t// account of it, but it isn't in any cell\n\t\t\t\tif ( that.s.aiOuterWidths.length === 0 ) {\n\t\t\t\t\tborder = $(that.s.dt.nTable).css('border-left-width');\n\t\t\t\t\tiWidth += typeof border === 'string' && border.indexOf('px') === -1 ?\n\t\t\t\t\t\t1 :\n\t\t\t\t\t\tparseInt( border, 10 );\n\t\t\t\t}\n\n\t\t\t\t// Likewise with the final column on the right\n\t\t\t\tif ( that.s.aiOuterWidths.length === that.s.dt.aoColumns.length-1 ) {\n\t\t\t\t\tborder = $(that.s.dt.nTable).css('border-right-width');\n\t\t\t\t\tiWidth += typeof border === 'string' && border.indexOf('px') === -1 ?\n\t\t\t\t\t\t1 :\n\t\t\t\t\t\tparseInt( border, 10 );\n\t\t\t\t}\n\n\t\t\t\tthat.s.aiOuterWidths.push( iWidth );\n\t\t\t\tthat.s.aiInnerWidths.push( th.width() );\n\n\t\t\t\tif ( i < that.s.iLeftColumns )\n\t\t\t\t{\n\t\t\t\t\tiLeftWidth += iWidth;\n\t\t\t\t}\n\n\t\t\t\tif ( that.s.iTableColumns-that.s.iRightColumns <= i )\n\t\t\t\t{\n\t\t\t\t\tiRightWidth += iWidth;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\tthis.s.iLeftWidth = iLeftWidth;\n\t\tthis.s.iRightWidth = iRightWidth;\n\t},\n\n\n\t/**\n\t * Set up the DOM for the fixed column. The way the layout works is to create a 1x3 grid\n\t * for the left column, the DataTable (for which we just reuse the scrolling element DataTable\n\t * puts into the DOM) and the right column. In each of he two fixed column elements there is a\n\t * grouping wrapper element and then a head, body and footer wrapper. In each of these we then\n\t * place the cloned header, body or footer tables. This effectively gives as 3x3 grid structure.\n\t *  @returns {void}\n\t *  @private\n\t */\n\t\"_fnGridSetup\": function ()\n\t{\n\t\tvar that = this;\n\t\tvar oOverflow = this._fnDTOverflow();\n\t\tvar block;\n\n\t\tthis.dom.body = this.s.dt.nTable;\n\t\tthis.dom.header = this.s.dt.nTHead.parentNode;\n\t\tthis.dom.header.parentNode.parentNode.style.position = \"relative\";\n\n\t\tvar nSWrapper =\n\t\t\t$('<div class=\"DTFC_ScrollWrapper\" style=\"position:relative; clear:both;\">'+\n\t\t\t\t'<div class=\"DTFC_LeftWrapper\" style=\"position:absolute; top:0; left:0;\" aria-hidden=\"true\">'+\n\t\t\t\t\t'<div class=\"DTFC_LeftHeadWrapper\" style=\"position:relative; top:0; left:0; overflow:hidden;\"></div>'+\n\t\t\t\t\t'<div class=\"DTFC_LeftBodyWrapper\" style=\"position:relative; top:0; left:0; height:0; overflow:hidden;\">'+\n\t\t\t\t\t\t'<div class=\"DTFC_LeftBodyLiner\" style=\"position:relative; top:0; left:0; overflow-y:scroll;\"></div>'+\n\t\t\t\t\t'</div>'+\n\t\t\t\t\t'<div class=\"DTFC_LeftFootWrapper\" style=\"position:relative; top:0; left:0; overflow:hidden;\"></div>'+\n\t\t\t\t'</div>'+\n\t\t\t\t'<div class=\"DTFC_RightWrapper\" style=\"position:absolute; top:0; right:0;\" aria-hidden=\"true\">'+\n\t\t\t\t\t'<div class=\"DTFC_RightHeadWrapper\" style=\"position:relative; top:0; left:0;\">'+\n\t\t\t\t\t\t'<div class=\"DTFC_RightHeadBlocker DTFC_Blocker\" style=\"position:absolute; top:0; bottom:0;\"></div>'+\n\t\t\t\t\t'</div>'+\n\t\t\t\t\t'<div class=\"DTFC_RightBodyWrapper\" style=\"position:relative; top:0; left:0; height:0; overflow:hidden;\">'+\n\t\t\t\t\t\t'<div class=\"DTFC_RightBodyLiner\" style=\"position:relative; top:0; left:0; overflow-y:scroll;\"></div>'+\n\t\t\t\t\t'</div>'+\n\t\t\t\t\t'<div class=\"DTFC_RightFootWrapper\" style=\"position:relative; top:0; left:0;\">'+\n\t\t\t\t\t\t'<div class=\"DTFC_RightFootBlocker DTFC_Blocker\" style=\"position:absolute; top:0; bottom:0;\"></div>'+\n\t\t\t\t\t'</div>'+\n\t\t\t\t'</div>'+\n\t\t\t'</div>')[0];\n\t\tvar nLeft = nSWrapper.childNodes[0];\n\t\tvar nRight = nSWrapper.childNodes[1];\n\n\t\tthis.dom.grid.dt.parentNode.insertBefore( nSWrapper, this.dom.grid.dt );\n\t\tnSWrapper.appendChild( this.dom.grid.dt );\n\n\t\tthis.dom.grid.wrapper = nSWrapper;\n\n\t\tif ( this.s.iLeftColumns > 0 )\n\t\t{\n\t\t\tthis.dom.grid.left.wrapper = nLeft;\n\t\t\tthis.dom.grid.left.head = nLeft.childNodes[0];\n\t\t\tthis.dom.grid.left.body = nLeft.childNodes[1];\n\t\t\tthis.dom.grid.left.liner = $('div.DTFC_LeftBodyLiner', nSWrapper)[0];\n\n\t\t\tnSWrapper.appendChild( nLeft );\n\t\t}\n\n\t\tif ( this.s.iRightColumns > 0 )\n\t\t{\n\t\t\tthis.dom.grid.right.wrapper = nRight;\n\t\t\tthis.dom.grid.right.head = nRight.childNodes[0];\n\t\t\tthis.dom.grid.right.body = nRight.childNodes[1];\n\t\t\tthis.dom.grid.right.liner = $('div.DTFC_RightBodyLiner', nSWrapper)[0];\n\n\t\t\tnRight.style.right = oOverflow.bar+\"px\";\n\n\t\t\tblock = $('div.DTFC_RightHeadBlocker', nSWrapper)[0];\n\t\t\tblock.style.width = oOverflow.bar+\"px\";\n\t\t\tblock.style.right = -oOverflow.bar+\"px\";\n\t\t\tthis.dom.grid.right.headBlock = block;\n\n\t\t\tblock = $('div.DTFC_RightFootBlocker', nSWrapper)[0];\n\t\t\tblock.style.width = oOverflow.bar+\"px\";\n\t\t\tblock.style.right = -oOverflow.bar+\"px\";\n\t\t\tthis.dom.grid.right.footBlock = block;\n\n\t\t\tnSWrapper.appendChild( nRight );\n\t\t}\n\n\t\tif ( this.s.dt.nTFoot )\n\t\t{\n\t\t\tthis.dom.footer = this.s.dt.nTFoot.parentNode;\n\t\t\tif ( this.s.iLeftColumns > 0 )\n\t\t\t{\n\t\t\t\tthis.dom.grid.left.foot = nLeft.childNodes[2];\n\t\t\t}\n\t\t\tif ( this.s.iRightColumns > 0 )\n\t\t\t{\n\t\t\t\tthis.dom.grid.right.foot = nRight.childNodes[2];\n\t\t\t}\n\t\t}\n\n\t\t// RTL support - swap the position of the left and right columns (#48)\n\t\tif ( this.s.rtl ) {\n\t\t\t$('div.DTFC_RightHeadBlocker', nSWrapper).css( {\n\t\t\t\tleft: -oOverflow.bar+'px',\n\t\t\t\tright: ''\n\t\t\t} );\n\t\t}\n\t},\n\n\n\t/**\n\t * Style and position the grid used for the FixedColumns layout\n\t *  @returns {void}\n\t *  @private\n\t */\n\t\"_fnGridLayout\": function ()\n\t{\n\t\tvar that = this;\n\t\tvar oGrid = this.dom.grid;\n\t\tvar iWidth = $(oGrid.wrapper).width();\n\t\tvar iBodyHeight = this.s.dt.nTable.parentNode.offsetHeight;\n\t\tvar iFullHeight = this.s.dt.nTable.parentNode.parentNode.offsetHeight;\n\t\tvar oOverflow = this._fnDTOverflow();\n\t\tvar iLeftWidth = this.s.iLeftWidth;\n\t\tvar iRightWidth = this.s.iRightWidth;\n\t\tvar rtl = $(this.dom.body).css('direction') === 'rtl';\n\t\tvar wrapper;\n\t\tvar scrollbarAdjust = function ( node, width ) {\n\t\t\tif ( ! oOverflow.bar ) {\n\t\t\t\t// If there is no scrollbar (Macs) we need to hide the auto scrollbar\n\t\t\t\tnode.style.width = (width+20)+\"px\";\n\t\t\t\tnode.style.paddingRight = \"20px\";\n\t\t\t\tnode.style.boxSizing = \"border-box\";\n\t\t\t}\n\t\t\telse if ( that._firefoxScrollError() ) {\n\t\t\t\t// See the above function for why this is required\n\t\t\t\tif ( $(node).height() > 34 ) {\n\t\t\t\t\tnode.style.width = (width+oOverflow.bar)+\"px\";\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Otherwise just overflow by the scrollbar\n\t\t\t\tnode.style.width = (width+oOverflow.bar)+\"px\";\n\t\t\t}\n\t\t};\n\n\t\t// When x scrolling - don't paint the fixed columns over the x scrollbar\n\t\tif ( oOverflow.x )\n\t\t{\n\t\t\tiBodyHeight -= oOverflow.bar;\n\t\t}\n\n\t\toGrid.wrapper.style.height = iFullHeight+\"px\";\n\n\t\tif ( this.s.iLeftColumns > 0 )\n\t\t{\n\t\t\twrapper = oGrid.left.wrapper;\n\t\t\twrapper.style.width = iLeftWidth+'px';\n\t\t\twrapper.style.height = '1px';\n\n\t\t\t// Swap the position of the left and right columns for rtl (#48)\n\t\t\t// This is always up against the edge, scrollbar on the far side\n\t\t\tif ( rtl ) {\n\t\t\t\twrapper.style.left = '';\n\t\t\t\twrapper.style.right = 0;\n\t\t\t}\n\t\t\telse {\n\t\t\t\twrapper.style.left = 0;\n\t\t\t\twrapper.style.right = '';\n\t\t\t}\n\n\t\t\toGrid.left.body.style.height = iBodyHeight+\"px\";\n\t\t\tif ( oGrid.left.foot ) {\n\t\t\t\toGrid.left.foot.style.top = (oOverflow.x ? oOverflow.bar : 0)+\"px\"; // shift footer for scrollbar\n\t\t\t}\n\n\t\t\tscrollbarAdjust( oGrid.left.liner, iLeftWidth );\n\t\t\toGrid.left.liner.style.height = iBodyHeight+\"px\";\n\t\t\toGrid.left.liner.style.maxHeight = iBodyHeight+\"px\";\n\t\t}\n\n\t\tif ( this.s.iRightColumns > 0 )\n\t\t{\n\t\t\twrapper = oGrid.right.wrapper;\n\t\t\twrapper.style.width = iRightWidth+'px';\n\t\t\twrapper.style.height = '1px';\n\n\t\t\t// Need to take account of the vertical scrollbar\n\t\t\tif ( this.s.rtl ) {\n\t\t\t\twrapper.style.left = oOverflow.y ? oOverflow.bar+'px' : 0;\n\t\t\t\twrapper.style.right = '';\n\t\t\t}\n\t\t\telse {\n\t\t\t\twrapper.style.left = '';\n\t\t\t\twrapper.style.right = oOverflow.y ? oOverflow.bar+'px' : 0;\n\t\t\t}\n\n\t\t\toGrid.right.body.style.height = iBodyHeight+\"px\";\n\t\t\tif ( oGrid.right.foot ) {\n\t\t\t\toGrid.right.foot.style.top = (oOverflow.x ? oOverflow.bar : 0)+\"px\";\n\t\t\t}\n\n\t\t\tscrollbarAdjust( oGrid.right.liner, iRightWidth );\n\t\t\toGrid.right.liner.style.height = iBodyHeight+\"px\";\n\t\t\toGrid.right.liner.style.maxHeight = iBodyHeight+\"px\";\n\n\t\t\toGrid.right.headBlock.style.display = oOverflow.y ? 'block' : 'none';\n\t\t\toGrid.right.footBlock.style.display = oOverflow.y ? 'block' : 'none';\n\t\t}\n\t},\n\n\n\t/**\n\t * Get information about the DataTable's scrolling state - specifically if the table is scrolling\n\t * on either the x or y axis, and also the scrollbar width.\n\t *  @returns {object} Information about the DataTables scrolling state with the properties:\n\t *    'x', 'y' and 'bar'\n\t *  @private\n\t */\n\t\"_fnDTOverflow\": function ()\n\t{\n\t\tvar nTable = this.s.dt.nTable;\n\t\tvar nTableScrollBody = nTable.parentNode;\n\t\tvar out = {\n\t\t\t\"x\": false,\n\t\t\t\"y\": false,\n\t\t\t\"bar\": this.s.dt.oScroll.iBarWidth\n\t\t};\n\n\t\tif ( nTable.offsetWidth > nTableScrollBody.clientWidth )\n\t\t{\n\t\t\tout.x = true;\n\t\t}\n\n\t\tif ( nTable.offsetHeight > nTableScrollBody.clientHeight )\n\t\t{\n\t\t\tout.y = true;\n\t\t}\n\n\t\treturn out;\n\t},\n\n\n\t/**\n\t * Clone and position the fixed columns\n\t *  @returns {void}\n\t *  @param   {Boolean} bAll Indicate if the header and footer should be updated as well (true)\n\t *  @private\n\t */\n\t\"_fnDraw\": function ( bAll )\n\t{\n\t\tthis._fnGridLayout();\n\t\tthis._fnCloneLeft( bAll );\n\t\tthis._fnCloneRight( bAll );\n\n\t\t/* Draw callback function */\n\t\tif ( this.s.fnDrawCallback !== null )\n\t\t{\n\t\t\tthis.s.fnDrawCallback.call( this, this.dom.clone.left, this.dom.clone.right );\n\t\t}\n\n\t\t/* Event triggering */\n\t\t$(this).trigger( 'draw.dtfc', {\n\t\t\t\"leftClone\": this.dom.clone.left,\n\t\t\t\"rightClone\": this.dom.clone.right\n\t\t} );\n\t},\n\n\n\t/**\n\t * Clone the right columns\n\t *  @returns {void}\n\t *  @param   {Boolean} bAll Indicate if the header and footer should be updated as well (true)\n\t *  @private\n\t */\n\t\"_fnCloneRight\": function ( bAll )\n\t{\n\t\tif ( this.s.iRightColumns <= 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar that = this,\n\t\t\ti, jq,\n\t\t\taiColumns = [];\n\n\t\tfor ( i=this.s.iTableColumns-this.s.iRightColumns ; i<this.s.iTableColumns ; i++ ) {\n\t\t\tif ( this.s.dt.aoColumns[i].bVisible ) {\n\t\t\t\taiColumns.push( i );\n\t\t\t}\n\t\t}\n\n\t\tthis._fnClone( this.dom.clone.right, this.dom.grid.right, aiColumns, bAll );\n\t},\n\n\n\t/**\n\t * Clone the left columns\n\t *  @returns {void}\n\t *  @param   {Boolean} bAll Indicate if the header and footer should be updated as well (true)\n\t *  @private\n\t */\n\t\"_fnCloneLeft\": function ( bAll )\n\t{\n\t\tif ( this.s.iLeftColumns <= 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar that = this,\n\t\t\ti, jq,\n\t\t\taiColumns = [];\n\n\t\tfor ( i=0 ; i<this.s.iLeftColumns ; i++ ) {\n\t\t\tif ( this.s.dt.aoColumns[i].bVisible ) {\n\t\t\t\taiColumns.push( i );\n\t\t\t}\n\t\t}\n\n\t\tthis._fnClone( this.dom.clone.left, this.dom.grid.left, aiColumns, bAll );\n\t},\n\n\n\t/**\n\t * Make a copy of the layout object for a header or footer element from DataTables. Note that\n\t * this method will clone the nodes in the layout object.\n\t *  @returns {Array} Copy of the layout array\n\t *  @param   {Object} aoOriginal Layout array from DataTables (aoHeader or aoFooter)\n\t *  @param   {Object} aiColumns Columns to copy\n\t *  @param   {boolean} events Copy cell events or not\n\t *  @private\n\t */\n\t\"_fnCopyLayout\": function ( aoOriginal, aiColumns, events )\n\t{\n\t\tvar aReturn = [];\n\t\tvar aClones = [];\n\t\tvar aCloned = [];\n\n\t\tfor ( var i=0, iLen=aoOriginal.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tvar aRow = [];\n\t\t\taRow.nTr = $(aoOriginal[i].nTr).clone(events, false)[0];\n\n\t\t\tfor ( var j=0, jLen=this.s.iTableColumns ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tif ( $.inArray( j, aiColumns ) === -1 )\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar iCloned = $.inArray( aoOriginal[i][j].cell, aCloned );\n\t\t\t\tif ( iCloned === -1 )\n\t\t\t\t{\n\t\t\t\t\tvar nClone = $(aoOriginal[i][j].cell).clone(events, false)[0];\n\t\t\t\t\taClones.push( nClone );\n\t\t\t\t\taCloned.push( aoOriginal[i][j].cell );\n\n\t\t\t\t\taRow.push( {\n\t\t\t\t\t\t\"cell\": nClone,\n\t\t\t\t\t\t\"unique\": aoOriginal[i][j].unique\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\taRow.push( {\n\t\t\t\t\t\t\"cell\": aClones[ iCloned ],\n\t\t\t\t\t\t\"unique\": aoOriginal[i][j].unique\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\taReturn.push( aRow );\n\t\t}\n\n\t\treturn aReturn;\n\t},\n\n\n\t/**\n\t * Clone the DataTable nodes and place them in the DOM (sized correctly)\n\t *  @returns {void}\n\t *  @param   {Object} oClone Object containing the header, footer and body cloned DOM elements\n\t *  @param   {Object} oGrid Grid object containing the display grid elements for the cloned\n\t *                    column (left or right)\n\t *  @param   {Array} aiColumns Column indexes which should be operated on from the DataTable\n\t *  @param   {Boolean} bAll Indicate if the header and footer should be updated as well (true)\n\t *  @private\n\t */\n\t\"_fnClone\": function ( oClone, oGrid, aiColumns, bAll )\n\t{\n\t\tvar that = this,\n\t\t\ti, iLen, j, jLen, jq, nTarget, iColumn, nClone, iIndex, aoCloneLayout,\n\t\t\tjqCloneThead, aoFixedHeader,\n\t\t\tdt = this.s.dt;\n\n\t\t/*\n\t\t * Header\n\t\t */\n\t\tif ( bAll )\n\t\t{\n\t\t\t$(oClone.header).remove();\n\n\t\t\toClone.header = $(this.dom.header).clone(true, false)[0];\n\t\t\toClone.header.className += \" DTFC_Cloned\";\n\t\t\toClone.header.style.width = \"100%\";\n\t\t\toGrid.head.appendChild( oClone.header );\n\n\t\t\t/* Copy the DataTables layout cache for the header for our floating column */\n\t\t\taoCloneLayout = this._fnCopyLayout( dt.aoHeader, aiColumns, true );\n\t\t\tjqCloneThead = $('>thead', oClone.header);\n\t\t\tjqCloneThead.empty();\n\n\t\t\t/* Add the created cloned TR elements to the table */\n\t\t\tfor ( i=0, iLen=aoCloneLayout.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tjqCloneThead[0].appendChild( aoCloneLayout[i].nTr );\n\t\t\t}\n\n\t\t\t/* Use the handy _fnDrawHead function in DataTables to do the rowspan/colspan\n\t\t\t * calculations for us\n\t\t\t */\n\t\t\tdt.oApi._fnDrawHead( dt, aoCloneLayout, true );\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* To ensure that we copy cell classes exactly, regardless of colspan, multiple rows\n\t\t\t * etc, we make a copy of the header from the DataTable again, but don't insert the\n\t\t\t * cloned cells, just copy the classes across. To get the matching layout for the\n\t\t\t * fixed component, we use the DataTables _fnDetectHeader method, allowing 1:1 mapping\n\t\t\t */\n\t\t\taoCloneLayout = this._fnCopyLayout( dt.aoHeader, aiColumns, false );\n\t\t\taoFixedHeader=[];\n\n\t\t\tdt.oApi._fnDetectHeader( aoFixedHeader, $('>thead', oClone.header)[0] );\n\n\t\t\tfor ( i=0, iLen=aoCloneLayout.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tfor ( j=0, jLen=aoCloneLayout[i].length ; j<jLen ; j++ )\n\t\t\t\t{\n\t\t\t\t\taoFixedHeader[i][j].cell.className = aoCloneLayout[i][j].cell.className;\n\n\t\t\t\t\t// If jQuery UI theming is used we need to copy those elements as well\n\t\t\t\t\t$('span.DataTables_sort_icon', aoFixedHeader[i][j].cell).each( function () {\n\t\t\t\t\t\tthis.className = $('span.DataTables_sort_icon', aoCloneLayout[i][j].cell)[0].className;\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._fnEqualiseHeights( 'thead', this.dom.header, oClone.header );\n\n\t\t/*\n\t\t * Body\n\t\t */\n\t\tif ( this.s.sHeightMatch == 'auto' )\n\t\t{\n\t\t\t/* Remove any heights which have been applied already and let the browser figure it out */\n\t\t\t$('>tbody>tr', that.dom.body).css('height', 'auto');\n\t\t}\n\n\t\tif ( oClone.body !== null )\n\t\t{\n\t\t\t$(oClone.body).remove();\n\t\t\toClone.body = null;\n\t\t}\n\n\t\toClone.body = $(this.dom.body).clone(true)[0];\n\t\toClone.body.className += \" DTFC_Cloned\";\n\t\toClone.body.style.paddingBottom = dt.oScroll.iBarWidth+\"px\";\n\t\toClone.body.style.marginBottom = (dt.oScroll.iBarWidth*2)+\"px\"; /* For IE */\n\t\tif ( oClone.body.getAttribute('id') !== null )\n\t\t{\n\t\t\toClone.body.removeAttribute('id');\n\t\t}\n\n\t\t$('>thead>tr', oClone.body).empty();\n\t\t$('>tfoot', oClone.body).remove();\n\n\t\tvar nBody = $('tbody', oClone.body)[0];\n\t\t$(nBody).empty();\n\t\tif ( dt.aiDisplay.length > 0 )\n\t\t{\n\t\t\t/* Copy the DataTables' header elements to force the column width in exactly the\n\t\t\t * same way that DataTables does it - have the header element, apply the width and\n\t\t\t * colapse it down\n\t\t\t */\n\t\t\tvar nInnerThead = $('>thead>tr', oClone.body)[0];\n\t\t\tfor ( iIndex=0 ; iIndex<aiColumns.length ; iIndex++ )\n\t\t\t{\n\t\t\t\tiColumn = aiColumns[iIndex];\n\n\t\t\t\tnClone = $(dt.aoColumns[iColumn].nTh).clone(true)[0];\n\t\t\t\tnClone.innerHTML = \"\";\n\n\t\t\t\tvar oStyle = nClone.style;\n\t\t\t\toStyle.paddingTop = \"0\";\n\t\t\t\toStyle.paddingBottom = \"0\";\n\t\t\t\toStyle.borderTopWidth = \"0\";\n\t\t\t\toStyle.borderBottomWidth = \"0\";\n\t\t\t\toStyle.height = 0;\n\t\t\t\toStyle.width = that.s.aiInnerWidths[iColumn]+\"px\";\n\n\t\t\t\tnInnerThead.appendChild( nClone );\n\t\t\t}\n\n\t\t\t/* Add in the tbody elements, cloning form the master table */\n\t\t\t$('>tbody>tr', that.dom.body).each( function (z) {\n\t\t\t\tvar i = that.s.dt.oFeatures.bServerSide===false ?\n\t\t\t\t\tthat.s.dt.aiDisplay[ that.s.dt._iDisplayStart+z ] : z;\n\t\t\t\tvar aTds = that.s.dt.aoData[ i ].anCells || $(this).children('td, th');\n\n\t\t\t\tvar n = this.cloneNode(false);\n\t\t\t\tn.removeAttribute('id');\n\t\t\t\tn.setAttribute( 'data-dt-row', i );\n\n\t\t\t\tfor ( iIndex=0 ; iIndex<aiColumns.length ; iIndex++ )\n\t\t\t\t{\n\t\t\t\t\tiColumn = aiColumns[iIndex];\n\n\t\t\t\t\tif ( aTds.length > 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\tnClone = $( aTds[iColumn] ).clone(true, true)[0];\n\t\t\t\t\t\tnClone.removeAttribute( 'id' );\n\t\t\t\t\t\tnClone.setAttribute( 'data-dt-row', i );\n\t\t\t\t\t\tnClone.setAttribute( 'data-dt-column', iColumn );\n\t\t\t\t\t\tn.appendChild( nClone );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnBody.appendChild( n );\n\t\t\t} );\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$('>tbody>tr', that.dom.body).each( function (z) {\n\t\t\t\tnClone = this.cloneNode(true);\n\t\t\t\tnClone.className += ' DTFC_NoData';\n\t\t\t\t$('td', nClone).html('');\n\t\t\t\tnBody.appendChild( nClone );\n\t\t\t} );\n\t\t}\n\n\t\toClone.body.style.width = \"100%\";\n\t\toClone.body.style.margin = \"0\";\n\t\toClone.body.style.padding = \"0\";\n\n\t\t// Interop with Scroller - need to use a height forcing element in the\n\t\t// scrolling area in the same way that Scroller does in the body scroll.\n\t\tif ( dt.oScroller !== undefined )\n\t\t{\n\t\t\tvar scrollerForcer = dt.oScroller.dom.force;\n\n\t\t\tif ( ! oGrid.forcer ) {\n\t\t\t\toGrid.forcer = scrollerForcer.cloneNode( true );\n\t\t\t\toGrid.liner.appendChild( oGrid.forcer );\n\t\t\t}\n\t\t\telse {\n\t\t\t\toGrid.forcer.style.height = scrollerForcer.style.height;\n\t\t\t}\n\t\t}\n\n\t\toGrid.liner.appendChild( oClone.body );\n\n\t\tthis._fnEqualiseHeights( 'tbody', that.dom.body, oClone.body );\n\n\t\t/*\n\t\t * Footer\n\t\t */\n\t\tif ( dt.nTFoot !== null )\n\t\t{\n\t\t\tif ( bAll )\n\t\t\t{\n\t\t\t\tif ( oClone.footer !== null )\n\t\t\t\t{\n\t\t\t\t\toClone.footer.parentNode.removeChild( oClone.footer );\n\t\t\t\t}\n\t\t\t\toClone.footer = $(this.dom.footer).clone(true, true)[0];\n\t\t\t\toClone.footer.className += \" DTFC_Cloned\";\n\t\t\t\toClone.footer.style.width = \"100%\";\n\t\t\t\toGrid.foot.appendChild( oClone.footer );\n\n\t\t\t\t/* Copy the footer just like we do for the header */\n\t\t\t\taoCloneLayout = this._fnCopyLayout( dt.aoFooter, aiColumns, true );\n\t\t\t\tvar jqCloneTfoot = $('>tfoot', oClone.footer);\n\t\t\t\tjqCloneTfoot.empty();\n\n\t\t\t\tfor ( i=0, iLen=aoCloneLayout.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\tjqCloneTfoot[0].appendChild( aoCloneLayout[i].nTr );\n\t\t\t\t}\n\t\t\t\tdt.oApi._fnDrawHead( dt, aoCloneLayout, true );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\taoCloneLayout = this._fnCopyLayout( dt.aoFooter, aiColumns, false );\n\t\t\t\tvar aoCurrFooter=[];\n\n\t\t\t\tdt.oApi._fnDetectHeader( aoCurrFooter, $('>tfoot', oClone.footer)[0] );\n\n\t\t\t\tfor ( i=0, iLen=aoCloneLayout.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\tfor ( j=0, jLen=aoCloneLayout[i].length ; j<jLen ; j++ )\n\t\t\t\t\t{\n\t\t\t\t\t\taoCurrFooter[i][j].cell.className = aoCloneLayout[i][j].cell.className;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._fnEqualiseHeights( 'tfoot', this.dom.footer, oClone.footer );\n\t\t}\n\n\t\t/* Equalise the column widths between the header footer and body - body get's priority */\n\t\tvar anUnique = dt.oApi._fnGetUniqueThs( dt, $('>thead', oClone.header)[0] );\n\t\t$(anUnique).each( function (i) {\n\t\t\tiColumn = aiColumns[i];\n\t\t\tthis.style.width = that.s.aiInnerWidths[iColumn]+\"px\";\n\t\t} );\n\n\t\tif ( that.s.dt.nTFoot !== null )\n\t\t{\n\t\t\tanUnique = dt.oApi._fnGetUniqueThs( dt, $('>tfoot', oClone.footer)[0] );\n\t\t\t$(anUnique).each( function (i) {\n\t\t\t\tiColumn = aiColumns[i];\n\t\t\t\tthis.style.width = that.s.aiInnerWidths[iColumn]+\"px\";\n\t\t\t} );\n\t\t}\n\t},\n\n\n\t/**\n\t * From a given table node (THEAD etc), get a list of TR direct child elements\n\t *  @param   {Node} nIn Table element to search for TR elements (THEAD, TBODY or TFOOT element)\n\t *  @returns {Array} List of TR elements found\n\t *  @private\n\t */\n\t\"_fnGetTrNodes\": function ( nIn )\n\t{\n\t\tvar aOut = [];\n\t\tfor ( var i=0, iLen=nIn.childNodes.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tif ( nIn.childNodes[i].nodeName.toUpperCase() == \"TR\" )\n\t\t\t{\n\t\t\t\taOut.push( nIn.childNodes[i] );\n\t\t\t}\n\t\t}\n\t\treturn aOut;\n\t},\n\n\n\t/**\n\t * Equalise the heights of the rows in a given table node in a cross browser way\n\t *  @returns {void}\n\t *  @param   {String} nodeName Node type - thead, tbody or tfoot\n\t *  @param   {Node} original Original node to take the heights from\n\t *  @param   {Node} clone Copy the heights to\n\t *  @private\n\t */\n\t\"_fnEqualiseHeights\": function ( nodeName, original, clone )\n\t{\n\t\tif ( this.s.sHeightMatch == 'none' && nodeName !== 'thead' && nodeName !== 'tfoot' )\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar that = this,\n\t\t\ti, iLen, iHeight, iHeight2, iHeightOriginal, iHeightClone,\n\t\t\trootOriginal = original.getElementsByTagName(nodeName)[0],\n\t\t\trootClone    = clone.getElementsByTagName(nodeName)[0],\n\t\t\tjqBoxHack    = $('>'+nodeName+'>tr:eq(0)', original).children(':first'),\n\t\t\tiBoxHack     = jqBoxHack.outerHeight() - jqBoxHack.height(),\n\t\t\tanOriginal   = this._fnGetTrNodes( rootOriginal ),\n\t\t\tanClone      = this._fnGetTrNodes( rootClone ),\n\t\t\theights      = [];\n\n\t\tfor ( i=0, iLen=anClone.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tiHeightOriginal = anOriginal[i].offsetHeight;\n\t\t\tiHeightClone = anClone[i].offsetHeight;\n\t\t\tiHeight = iHeightClone > iHeightOriginal ? iHeightClone : iHeightOriginal;\n\n\t\t\tif ( this.s.sHeightMatch == 'semiauto' )\n\t\t\t{\n\t\t\t\tanOriginal[i]._DTTC_iHeight = iHeight;\n\t\t\t}\n\n\t\t\theights.push( iHeight );\n\t\t}\n\n\t\tfor ( i=0, iLen=anClone.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tanClone[i].style.height = heights[i]+\"px\";\n\t\t\tanOriginal[i].style.height = heights[i]+\"px\";\n\t\t}\n\t},\n\n\t/**\n\t * Determine if the UA suffers from Firefox's overflow:scroll scrollbars\n\t * not being shown bug.\n\t *\n\t * Firefox doesn't draw scrollbars, even if it is told to using\n\t * overflow:scroll, if the div is less than 34px height. See bugs 292284 and\n\t * 781885. Using UA detection here since this is particularly hard to detect\n\t * using objects - its a straight up rendering error in Firefox.\n\t *\n\t * @return {boolean} True if Firefox error is present, false otherwise\n\t */\n\t_firefoxScrollError: function () {\n\t\tif ( _firefoxScroll === undefined ) {\n\t\t\tvar test = $('<div/>')\n\t\t\t\t.css( {\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tleft: 0,\n\t\t\t\t\theight: 10,\n\t\t\t\t\twidth: 50,\n\t\t\t\t\toverflow: 'scroll'\n\t\t\t\t} )\n\t\t\t\t.appendTo( 'body' );\n\n\t\t\t// Make sure this doesn't apply on Macs with 0 width scrollbars\n\t\t\t_firefoxScroll = (\n\t\t\t\ttest[0].clientWidth === test[0].offsetWidth && this._fnDTOverflow().bar !== 0\n\t\t\t);\n\n\t\t\ttest.remove();\n\t\t}\n\n\t\treturn _firefoxScroll;\n\t}\n} );\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Statics\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n/**\n * FixedColumns default settings for initialisation\n *  @name FixedColumns.defaults\n *  @namespace\n *  @static\n */\nFixedColumns.defaults = /** @lends FixedColumns.defaults */{\n\t/**\n\t * Number of left hand columns to fix in position\n\t *  @type     int\n\t *  @default  1\n\t *  @static\n\t *  @example\n\t *      var  = $('#example').dataTable( {\n\t *          \"scrollX\": \"100%\"\n\t *      } );\n\t *      new $.fn.dataTable.fixedColumns( table, {\n\t *          \"leftColumns\": 2\n\t *      } );\n\t */\n\t\"iLeftColumns\": 1,\n\n\t/**\n\t * Number of right hand columns to fix in position\n\t *  @type     int\n\t *  @default  0\n\t *  @static\n\t *  @example\n\t *      var table = $('#example').dataTable( {\n\t *          \"scrollX\": \"100%\"\n\t *      } );\n\t *      new $.fn.dataTable.fixedColumns( table, {\n\t *          \"rightColumns\": 1\n\t *      } );\n\t */\n\t\"iRightColumns\": 0,\n\n\t/**\n\t * Draw callback function which is called when FixedColumns has redrawn the fixed assets\n\t *  @type     function(object, object):void\n\t *  @default  null\n\t *  @static\n\t *  @example\n\t *      var table = $('#example').dataTable( {\n\t *          \"scrollX\": \"100%\"\n\t *      } );\n\t *      new $.fn.dataTable.fixedColumns( table, {\n\t *          \"drawCallback\": function () {\n\t *\t            alert( \"FixedColumns redraw\" );\n\t *\t        }\n\t *      } );\n\t */\n\t\"fnDrawCallback\": null,\n\n\t/**\n\t * Height matching algorthim to use. This can be \"none\" which will result in no height\n\t * matching being applied by FixedColumns (height matching could be forced by CSS in this\n\t * case), \"semiauto\" whereby the height calculation will be performed once, and the result\n\t * cached to be used again (fnRecalculateHeight can be used to force recalculation), or\n\t * \"auto\" when height matching is performed on every draw (slowest but must accurate)\n\t *  @type     string\n\t *  @default  semiauto\n\t *  @static\n\t *  @example\n\t *      var table = $('#example').dataTable( {\n\t *          \"scrollX\": \"100%\"\n\t *      } );\n\t *      new $.fn.dataTable.fixedColumns( table, {\n\t *          \"heightMatch\": \"auto\"\n\t *      } );\n\t */\n\t\"sHeightMatch\": \"semiauto\"\n};\n\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Constants\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n/**\n * FixedColumns version\n *  @name      FixedColumns.version\n *  @type      String\n *  @default   See code\n *  @static\n */\nFixedColumns.version = \"3.8.0\";\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables API integration\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\nDataTable.Api.register( 'fixedColumns()', function () {\n\treturn this;\n} );\n\nDataTable.Api.register( 'fixedColumns().update()', function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tif ( ctx._oFixedColumns ) {\n\t\t\tctx._oFixedColumns.fnUpdate();\n\t\t}\n\t} );\n} );\n\nDataTable.Api.register( 'fixedColumns().relayout()', function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tif ( ctx._oFixedColumns ) {\n\t\t\tctx._oFixedColumns.fnRedrawLayout();\n\t\t}\n\t} );\n} );\n\nDataTable.Api.register( 'rows().recalcHeight()', function () {\n\treturn this.iterator( 'row', function ( ctx, idx ) {\n\t\tif ( ctx._oFixedColumns ) {\n\t\t\tctx._oFixedColumns.fnRecalculateHeight( this.row(idx).node() );\n\t\t}\n\t} );\n} );\n\nDataTable.Api.register( 'fixedColumns().rowIndex()', function ( row ) {\n\trow = $(row);\n\n\treturn row.parents('.DTFC_Cloned').length ?\n\t\tthis.rows( { page: 'current' } ).indexes()[ row.index() ] :\n\t\tthis.row( row ).index();\n} );\n\nDataTable.Api.register( 'fixedColumns().cellIndex()', function ( cell ) {\n\tcell = $(cell);\n\n\tif ( cell.parents('.DTFC_Cloned').length ) {\n\t\tvar rowClonedIdx = cell.parent().index();\n\t\tvar rowIdx = this.rows( { page: 'current' } ).indexes()[ rowClonedIdx ];\n\t\tvar columnIdx;\n\n\t\tif ( cell.parents('.DTFC_LeftWrapper').length ) {\n\t\t\tcolumnIdx = cell.index();\n\t\t}\n\t\telse {\n\t\t\tvar columns = this.columns().flatten().length;\n\t\t\tcolumnIdx = columns - this.context[0]._oFixedColumns.s.iRightColumns + cell.index();\n\t\t}\n\n\t\treturn {\n\t\t\trow: rowIdx,\n\t\t\tcolumn: this.column.index( 'toData', columnIdx ),\n\t\t\tcolumnVisible: columnIdx\n\t\t};\n\t}\n\telse {\n\t\treturn this.cell( cell ).index();\n\t}\n} );\n\nDataTable.Api.registerPlural( 'cells().fixedNodes()', 'cell().fixedNode()', function () {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn settings._oFixedColumns\n\t\t\t? settings._oFixedColumns.fnToFixedNode( row, column )\n\t\t\t: this.node();\n\t}, 1 );\n} );\n\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Initialisation\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n// Attach a listener to the document which listens for DataTables initialisation\n// events so we can automatically initialise\n$(document).on( 'init.dt.fixedColumns', function (e, settings) {\n\tif ( e.namespace !== 'dt' ) {\n\t\treturn;\n\t}\n\n\tvar init = settings.oInit.fixedColumns;\n\tvar defaults = DataTable.defaults.fixedColumns;\n\n\tif ( init || defaults ) {\n\t\tvar opts = $.extend( {}, init, defaults );\n\n\t\tif ( init !== false ) {\n\t\t\tnew FixedColumns( settings, opts );\n\t\t}\n\t}\n} );\n\n\n\n// Make FixedColumns accessible from the DataTables instance\n$.fn.dataTable.FixedColumns = FixedColumns;\n$.fn.DataTable.FixedColumns = FixedColumns;\n\nreturn FixedColumns;\n}));\n"],"file":"dataTables.fixedColumns.min.js"}