{"version":3,"sources":["render_form.js"],"names":["define","$","Ajax","Notification","ATTRIBUTE","DATA_DELETING","DATA_PROCESSING","forms","formeo","fullpage","PROMISES","GET_FORM_DEFINITION","id","call","methodname","args","form_id","SUBMIT_FORM_DATA","formid","formdata","data","upload_form_data","form","submitButton","label","processingLabel","afterSubmit","arguments","length","undefined","text","done","response","status","html","msg","dom","alert","hasOwnProperty","errors","JSON","parse","remove","each","name","error","errorview","find","after","display_validation_errors","loadingClose","fail","ex","exception","submit_form","_this","closest","valid","checkValidity","attr","parent","val","submit","loading","setTimeout","serializeArray","removeList","filteredList","forEach","element","index","indexOf","push","stringify","filter_formdata","render_forms","sitekey","formeoOpts","container","localStorage","idElement","Formeo","definition","render","prepend","title","formData","i","elem","tagName","type","value","prop","changeEvent","CustomEvent","target","dispatchEvent","is","parents","addClass","load_form_data","action","apply_action","keyup","event","keyCode","this","formtype","click","console","log","init","document","ready","e","window","resize","manageFormWidth","on","open","M","cfg","wwwroot","util","get_string"],"mappings":"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","sourcesContent":["/*\n * Edwiser_Forms - https://edwiser.org/\n * Version: 0.1.0\n * Author: Yogesh Shirsath\n */\ndefine([\n    'jquery',\n    'core/ajax',\n    'core/notification',\n    './iefixes',\n    'local_edwiserform/formviewer'\n], function ($, Ajax, Notification) {\n    var SELECTORS = {\n        CONTAINER: '.edwiserform-container',\n        FULLPAGE: '#edwiserform-fullpage',\n        UPLOADED_FILE: 'efb-uploaded-file',\n        DELETE_FILE: 'efb-delete-user-file',\n        DELETE_CANCEL: 'efb-delete-user-file-cancel',\n        FILE: 'input[type=\"file\"]',\n        COMPONENT: 'local_edwiserform'\n    };\n\n    var ATTRIBUTE = {\n        DATA_DELETING: 'data-deleting',\n        DATA_PROCESSING: 'data-processing'\n    };\n\n    var forms = null;\n\n    var formeo = [];\n\n    var fullpage = false;\n\n    var PROMISES = {\n        /**\n         * Call moodle service edwiser_get_form_definition\n         * @param  {Number}  id Form id\n         * @return {Promise}    Ajax promise call\n         */\n        GET_FORM_DEFINITION: function(id) {\n            var promise = Ajax.call([{\n                methodname: 'edwiserform_get_form_definition',\n                args: {\n                    form_id: id\n                }\n            }]);\n            return promise[0];\n        },\n        /**\n         * Call moodle service edwiser_submit_form_data\n         * @param  {Number}  formid   Form id\n         * @param  {String}  formdata Submitted form data\n         * @return {Promise}    Ajax promise call\n         */\n        SUBMIT_FORM_DATA: function(formid, formdata) {\n            var promise = Ajax.call([{\n                methodname: 'edwiserform_submit_form_data',\n                args: {\n                    formid: formid,\n                    data: formdata\n                }\n            }]);\n            return promise[0];\n        }\n    }\n\n    /**\n     * Load data to form fields and trigger events\n     * @param  {DOM} form DOM form object\n     * @param  {Object} data Previously + Default data of user\n     */\n    function load_form_data(form, data) {\n        var formData = JSON.parse(data);\n        $.each(formData, function(index, attr) {\n            $.each($(form).find('[name=\"' + attr.name + '\"]'), function(i, elem) {\n                switch (elem.tagName) {\n                    case 'INPUT':\n                        switch (elem.type) {\n                            case 'radio':\n                                if (elem.value == attr.value) {\n                                    $(elem).prop('checked', true);\n                                }\n                                var changeEvent = new CustomEvent(\"click\", {target: $(elem)[0]});\n                                $(elem)[0].dispatchEvent(changeEvent);\n                                break;\n                            case 'checkbox':\n                                if (elem.value == attr.value) {\n                                    $(elem).prop('checked', true);\n                                }\n                                break;\n                            default:\n                                $(elem).val(attr.value);\n                                break;\n                        }\n                        break;\n                    case 'SELECT':\n                        if ($(elem).is('[multiple=\"true\"]')) {\n                            let value = $(elem).val();\n                            value.push(attr.value);\n                            attr.value = value;\n                        }\n                    case 'TEXTAREA':\n                        $(elem).val(attr.value);\n                        break;\n                }\n                var changeEvent = new CustomEvent(\"change\", {target: $(elem)[0]});\n                $(elem)[0].dispatchEvent(changeEvent);\n                if ($(elem).val() != '') {\n                    $(elem).parents('.f-field-group').addClass('active');\n                }\n            });\n        });\n    }\n\n    /**\n     * Display validation errors to form element\n     * @param {DOM}   form Form DOM element object\n     * @param {Array}      errors errors list\n     */\n    function display_validation_errors(form, errors) {\n        var errors = JSON.parse(errors);\n        $('.custom-validation-error').remove();\n        $.each(errors, function(name, error) {\n            var errorview = $(form).find('#' + name + '-error');\n            if (errorview.length == 0) {\n                $(form).find('[name=\"' + name + '\"]').after('<span id=\"' + name + '-error\" class=\"text-error custom-validation-error\"></span>');\n                errorview = $(form).find('#' + name + '-error');\n            }\n            errorview.text(error);\n        });\n    }\n\n    /**\n     * Filter form data\n     * @param  {Array} formdata Submitted form data array\n     * @return {String}           JSON formdata\n     */\n    function filter_formdata(formdata) {\n        var removeList = ['g-recaptcha-response'];\n        var filteredList = [];\n        formdata.forEach(function(element, index) {\n            if (removeList.indexOf(element.name) == -1) {\n                filteredList.push(element);\n            }\n        });\n        return JSON.stringify(filteredList);\n    }\n\n    /**\n     * Upload form data to service\n     * @param {DOM}      form            Form DOM element object\n     * @param {Formeo}   formeo          Formeo object\n     * @param {DOM}      submitButton    Submit button DOM object\n     * @param {String}   label           Label for submit button\n     * @param {String}   processingLabel Label for submit button when form data is being submit\n     * @param {Number}   formid          Form id\n     * @param {String}   formdata        Submitted form data\n     * @param {Function} afterSubmit     Function to be called after form submission\n     */\n    function upload_form_data(form, formeo, submitButton, label, processingLabel, formid, formdata, afterSubmit = null) {\n        $(submitButton).text(processingLabel);\n        PROMISES.SUBMIT_FORM_DATA(formid, formdata)\n        .done(function(response) {\n            if (response.status) {\n                $(form).html(response.msg);\n                formeo.dom.alert('success', response.msg);\n                if (afterSubmit != null) {\n                    afterSubmit(form, formdata);\n                }\n            } else {\n                if (response.msg != '') {\n                    formeo.dom.alert('warning', response.msg);\n                }\n                if (response.hasOwnProperty('errors')) {\n                    display_validation_errors(form, response.errors);\n                }\n            }\n            formeo.dom.loadingClose();\n            $(submitButton).text(label);\n        }).fail(function(ex) {\n            formeo.dom.loadingClose();\n            $(submitButton).text(label);\n            Notification.exception(ex);\n        });\n    }\n\n    /**\n     * Prepare and submit form data to server\n     * @param  {DOM}    _this  Clicked form object\n     * @param  {Formeo} formeo Formeo object\n     */\n    function submit_form(_this, formeo) {\n        var form = $(_this).closest('form');\n        var submitButton = _this;\n        var valid = formeo.dom.checkValidity(form[0]);\n        var label = $(_this).text();\n        var processingLabel = $(_this).attr(ATTRIBUTE.DATA_PROCESSING);\n        var formid = $(form).parent().find('.id').val();\n        if (valid) {\n            if ($(form).attr('action') != '') {\n                $(form).submit();\n                return;\n            }\n            formeo.dom.loading();\n            setTimeout(function() {\n                var formdata = form.serializeArray();\n                formdata = filter_formdata(formdata);\n                upload_form_data(form, formeo, submitButton, label, processingLabel, formid, formdata);\n            }, 1000);\n        }\n    }\n\n    /**\n     * Initialize events on elements\n     */\n    function initializeEvents() {\n        // Handle form field arrangement on resize.\n        $(window).resize(function() {\n            $.each(forms, function(index) {\n                formeo[index].dom.manageFormWidth(fullpage);\n            });\n        });\n        $('.step-navigation #previous-step').click(function() {\n            return;\n        });\n        $('.step-navigation #next-step').click(function() {\n            return;\n        });\n\n        $('body').on('click', '.efb-view-fullpage', function() {\n            // View form on full page.\n            var id = $(this).closest('.edwiserform-container').find('input[class=\"id\"]').val();\n            window.open(M.cfg.wwwroot + '/local/edwiserform/form.php?id=' + id);\n            $(this).closest('.edwiserform-container').html(M.util.get_string('fullpage-link-clicked', 'local_edwiserform'));\n        });\n    }\n\n    /**\n     * Apply form action attribute\n     * @param  {Object} form   Form object\n     * @param  {String} action Action link\n     */\n    function apply_action(form, action) {\n        $(form).attr('action', action);\n    }\n\n    /**\n     * Render all forms on the page\n     * @param  String sitekey sitekey for Google recaptcha\n     */\n    function render_forms(sitekey) {\n        let formeoOpts = {\n            container: '',\n            sitekey: sitekey,\n            localStorage: false, // Changed from session storage to local storage.\n        };\n        formeo = [];\n        forms = $('.edwiserform-container');\n        fullpage = $('#edwiserform-fullpage') && $('#edwiserform-fullpage').val();\n        $.each(forms, function(index, form) {\n            var idElement = $(form).parent().find('.id');\n            var id = idElement.val();\n            PROMISES.GET_FORM_DEFINITION(id)\n            .done(function(response) {\n                if (response.status != false) {\n                    formeoOpts.container = form;\n                    formeo[index] = new Formeo(formeoOpts, response.definition);\n                    formeo[index].render(form);\n                    $(form).prepend('<h2>' + response.title + '</h2>');\n                    $(form).prepend(idElement);\n                    if (response.data) {\n                        load_form_data(form, response.data);\n                    }\n                    if (response.action && response.action != '') {\n                        apply_action(form, response.action);\n                    }\n                    $(form).keyup(function(event) {\n                        if (event.keyCode == 13) {\n                            submit_form(this, formeo[index], response.formtype);\n                        }\n                    });\n                    $(form).find('#submit-form').click(function() {\n                        submit_form(this, formeo[index], response.formtype);\n                    });\n                } else {\n                    $(form).html(response.msg).addClass(\"empty\");\n                }\n            }).fail(function(ex) {\n                console.log(ex);\n            });\n        });\n    }\n    return {\n        init: function(sitekey) {\n            $(document).ready(function (e) {\n                if ($('#edwiserform-fullpage').length != 0 && $('#edwiserform-fullpage').val() == true) {\n                    $('body').addClass('edwiserform-fullpage');\n                }\n                render_forms(sitekey);\n                initializeEvents();\n            });\n        }\n    }\n});\n"],"file":"render_form.min.js"}